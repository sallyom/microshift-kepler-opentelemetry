---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otelcol
  labels:
    otel: collect
data:
  otelconfig.yaml: |
    extensions:
      bearertokenauth:
        filename: /conf/edge-token/edge-token
    receivers:
      otlp:
        protocols:
          http:
          grpc:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 5s
            static_configs:
            - targets: ['10.42.0.118:9102'] # application metrics endpoint
    processors:
      memory_limiter:
        check_interval: 1s
        limit_mib: 2000
        spike_limit_mib: 400
      batch:
    exporters:
      otlphttp:
        # endpoint: https://OCP_ROUTE_OTELCOL
        endpoint: https://otelcol-thanos.apps.ci-ln-w3ydddb-76ef8.origin-ci-int-aws.dev.rhcloud.com # otel-collector service route from OCP, port 4318
        auth:
          authenticator: bearertokenauth
        tls:
          insecure: false
          ca_file: /conf/ca/ca.crt
      logging:
        verbosity: detailed
      prometheusremotewrite:
        # endpoint: https://OCP_ROUTE_THANOS_RECEIVE/api/v1/receive
        endpoint: https://thanos-receive-thanos.apps.ci-ln-w3ydddb-76ef8.origin-ci-int-aws.dev.rhcloud.com/api/v1/receive
        auth:
          authenticator: bearertokenauth
        tls:
          insecure: false
          ca_file: /conf/ca/ca.crt
      logging:
        verbosity: detailed
      jaeger:
        endpoint: "localhost:14250" # Jaeger service port-forwarded from remote (local) machine
        tls:
          insecure: true
    service:
      telemetry:
        metrics:
          level: detailed
          address: 0.0.0.0:9999
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [prometheusremotewrite, logging]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [jaeger]
