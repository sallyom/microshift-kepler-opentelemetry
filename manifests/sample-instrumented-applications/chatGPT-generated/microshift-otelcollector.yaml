apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  labels:
    otel: collect
  name: otelcol
  namespace: generate-data
spec:
  config: |
    extensions:
      bearertokenauth:
        filename: /conf/edge-token/edge-token
      basicauth/client:
        client_auth:
          username: summit
          password: demo-2450553304
      file_storage:
        directory: ./otc
        timeout: 10s
      headers_setter:
        headers:
          - action: insert
            key: X-Scope-OrgID
            from_context: tenant_id
    receivers:
      otlp:
        protocols:
          http:
          grpc:
            include_metadata: true
      prometheus:
        config:
          scrape_configs:
          - job_name: 'kepler'
            scrape_interval: 5s
            static_configs:
            - targets: ['localhost:9090'] # instrumented app endpoint
          - job_name: 'otel-collector'
            scrape_interval: 10s
            static_configs:
            - targets: ['localhost:8888']
    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 25
      resourcedetection/openshift:
        detectors: [openshift]
        timeout: 2s
        override: false
    exporters:
      otlphttp/2:
        # endpoint: https://OCP_ROUTE_OTELCOL
        endpoint: https://otelcol-thanos.apps.open-svc-sts.k1wl.p1.openshiftapps.com
        auth:
          authenticator: bearertokenauth
        tls:
          insecure: false
          ca_file: /conf/ca/ca.crt
      otlphttp:
        # endpoint: https://OCP_ROUTE_OTELCOL
        endpoint: https://otlp-https.apps.open-svc-sts.k1wl.p1.openshiftapps.com
        auth:
          authenticator: basicauth/client
        tls:
          insecure: false
          ca_file: /conf/ca/ca.crt
        sending_queue:
          storage: file_storage
      logging:
        verbosity: detailed
      prometheusremotewrite/ocp:
        # endpoint: https://OCP_ROUTE_THANOS_RECEIVE/api/v1/receive
        endpoint: https://thanos-receive-thanos.apps.open-svc-sts.k1wl.p1.openshiftapps.com/api/v1/receive
        auth:
          authenticator: bearertokenauth
        tls:
          insecure: false
          ca_file: /conf/ca/ca.crt
    service:
      extensions: [bearertokenauth,basicauth/client,file_storage]
      pipelines:
        metrics:
          receivers: [otlp,prometheus]
          processors: [memory_limiter,batch]
          exporters: [otlphttp]
        traces:
          receivers: [otlp]
          processors: [memory_limiter,batch]
          exporters: [otlphttp,otlphttp/2]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [logging,otlphttp]
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.74.0
  mode: sidecar
  serviceAccount: generate-data
  securityContext:
    privileged: true
  volumeMounts:
  - mountPath: /conf/edge-token
    name: edge-token
  - mountPath: /conf/ca
    name: client-ca
  - mountPath: /otc
    name: file-storage
  - mountPath: /etc/pki/ca-trust/source/service-ca
    name: cabundle-volume
  volumes:
  - configMap:
      name: otelcol-cabundle
    name: cabundle-volume
  - configMap:
      name: edge-token
    name: edge-token
  - configMap:
      name: client-ca
    name: client-ca
  - hostPath:
      path: /var/lib/microshift/otel
      type: DirectoryOrCreate
    name: file-storage
status: {}
